name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black

      - name: Run Black linter
        run: black .

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t classconnect-api .

  test:
    name: Run Tests & Collect Coverage
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage

      - name: Install Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Set environment variables
        run: echo -e "HOST=0.0.0.0\nPORT=6969\nENVIRONMENT=production" > .env

      - name: Run API container
        run: docker-compose up -d

      - name: Wait for API to be ready
        run: |
          for i in {1..10}; do
            if curl -s http://0.0.0.0:6969/courses; then
              echo "API is ready"
              break
            fi
            echo "Waiting for API..."
            sleep 5
          done

      - name: Run tests with coverage
        run: |
          coverage run -m unittest discover -s tests
          coverage report
          coverage xml

      - name: Stop Docker
        run: docker-compose down

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3      